#!/bin/bash

function __info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

function __success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

function __user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1"
}

function __fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit 1
}

function __ensure_rsync() {
  if ! command -v rsync > /dev/null; then
    __fail "Please install rsync first"
  fi
}

function __load_config() {
  [[ $# != 1 ]] && return 1

  local playbook=${WELDER_PLAYBOOK:-}
  if [[ -z "$playbook" ]]; then
    for playbook in "$1" "$WELDER_ROOT/$1" "$WELDER_ROOT/$1.yml" "$WELDER_ROOT/$1.yaml"; do
      if [[ -e "$playbook" ]]; then
        export WELDER_PLAYBOOK="$(mktemp -p "$WELDER_CACHE" playbook.XXXXXXXXXX)"
        trap 'unlink "$WELDER_PLAYBOOK"' EXIT
        cp "$playbook" "$WELDER_PLAYBOOK"
        break
      fi
    done
  fi
  [[ -z "${WELDER_PLAYBOOK:-}" ]] && return 1

  eval "$($WELDER_ROOT/libexec/priv/parse-config "$WELDER_PLAYBOOK")"

  if [ -z "${cfg_ssh_url-}" ]; then __fail "variable not set in playbook: ssh_url"; fi
  if [ -z "${cfg_ssh_port-}" ]; then cfg_ssh_port="22"; fi
}
